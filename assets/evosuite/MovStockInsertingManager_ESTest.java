/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 06 21:47:49 GMT 2024
 */

package org.isf.medicalstock.test;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.isf.medicals.model.Medical;
import org.isf.medicalstock.manager.MovStockInsertingManager;
import org.isf.medicalstock.model.Lot;
import org.isf.medicalstock.model.Movement;
import org.isf.utils.exception.model.OHExceptionMessage;
import org.junit.runner.RunWith;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MovStockInsertingManager_ESTest extends MovStockInsertingManager_ESTest_scaffolding {

//  @Test(timeout = 4000)
//  public void test00()  throws Throwable  {
//      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
//      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-3232), (-3232), (-3232), (-3232), (-3232));
//      Medical medical0 = new Medical();
//      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1406), "un&%0L6!MhOqE=I3crx");
//      Locale locale0 = Locale.ITALIAN;
//      MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(simpleTimeZone0, locale0);
//      BigDecimal bigDecimal0 = BigDecimal.ONE;
//      Lot lot0 = new Lot(medical0, "", mockGregorianCalendar0, mockGregorianCalendar1, bigDecimal0);
//      List<OHExceptionMessage> list0 = movStockInsertingManager0.validateLot(lot0);
//      assertTrue(list0.isEmpty());
//  }

//  @Test(timeout = 4000)
//  public void test01()  throws Throwable  {
//      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
//      Lot lot0 = new Lot("angal.medicalstock.thelotidistoolongmax50chars.msg");
//      List<OHExceptionMessage> list0 = movStockInsertingManager0.validateLot(lot0);
//      assertEquals(3, list0.size());
//  }

//  @Test(timeout = 4000)
//  public void test02()  throws Throwable  {
//      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
//      Movement movement0 = new Movement();
//      // Undeclared exception!
//      try { 
//        movStockInsertingManager0.validateMovement(movement0, false);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.isf.medicalstock.manager.MovStockInsertingManager", e);
//      }
//  }

//  @Test(timeout = 4000)
//  public void test03()  throws Throwable  {
//      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
//      // Undeclared exception!
//      try { 
//        movStockInsertingManager0.prepareChargingMovement((Movement) null, false);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.isf.medicalstock.manager.MovStockInsertingManager", e);
//      }
//  }

//  @Test(timeout = 4000)
//  public void test04()  throws Throwable  {
//      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
//      // Undeclared exception!
//      try { 
//        movStockInsertingManager0.checkReferenceNumber("6!afle+P)/RC");
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.isf.medicalstock.manager.MovStockInsertingManager", e);
//      }
//  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
      // Undeclared exception!
      try { 
        movStockInsertingManager0.alertCriticalQuantity((Medical) null, (-3419));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.isf.medicalstock.manager.MovStockInsertingManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
      // Undeclared exception!
      try { 
        movStockInsertingManager0.refNoExists("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.isf.medicalstock.manager.MovStockInsertingManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
      // Undeclared exception!
      try { 
        movStockInsertingManager0.getLastMovementDate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.isf.medicalstock.manager.MovStockInsertingManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
      LinkedList<Movement> linkedList0 = new LinkedList<Movement>();
      boolean boolean0 = movStockInsertingManager0.newMultipleDischargingMovements(linkedList0, (String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
      LinkedList<Movement> linkedList0 = new LinkedList<Movement>();
      boolean boolean0 = movStockInsertingManager0.newMultipleChargingMovements(linkedList0, (String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
      LinkedList<Movement> linkedList0 = new LinkedList<Movement>();
      try { 
        movStockInsertingManager0.newMultipleChargingMovements(linkedList0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.isf.medicalstock.manager.MovStockInsertingManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
      List<Lot> list0 = movStockInsertingManager0.getLotByMedical((Medical) null);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
      Integer integer0 = new Integer(133);
      Medical medical0 = new Medical(integer0);
      // Undeclared exception!
      try { 
        movStockInsertingManager0.getLotByMedical(medical0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.isf.medicalstock.manager.MovStockInsertingManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
      LinkedList<Movement> linkedList0 = new LinkedList<Movement>();
      try { 
        movStockInsertingManager0.newMultipleDischargingMovements(linkedList0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.isf.medicalstock.manager.MovStockInsertingManager", e);
      }
  }

//  @Test(timeout = 4000)
//  public void test14()  throws Throwable  {
//      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
//      List<OHExceptionMessage> list0 = movStockInsertingManager0.checkReferenceNumber((String) null);
//      assertFalse(list0.isEmpty());
//  }

//  @Test(timeout = 4000)
//  public void test15()  throws Throwable  {
//      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
//      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 6, (-52), (-52), 0, (-74));
//      MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar();
//      Lot lot0 = new Lot("angal.medicalstock.pleasechooseatype.msg", mockGregorianCalendar1, mockGregorianCalendar0);
//      List<OHExceptionMessage> list0 = movStockInsertingManager0.validateLot(lot0);
//      assertEquals(1, list0.size());
//  }

//  @Test(timeout = 4000)
//  public void test16()  throws Throwable  {
//      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
//      Lot lot0 = new Lot();
//      lot0.setCode("angal.medicalstock.thequantitymustnotbezero.msg");
//      TimeZone timeZone0 = TimeZone.getTimeZone("");
//      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
//      lot0.setPreparationDate(mockGregorianCalendar0);
//      List<OHExceptionMessage> list0 = movStockInsertingManager0.validateLot(lot0);
//      assertEquals(1, list0.size());
//  }

//  @Test(timeout = 4000)
//  public void test17()  throws Throwable  {
//      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
//      BigDecimal bigDecimal0 = new BigDecimal((-744.0));
//      Integer integer0 = new Integer(686);
//      Medical medical0 = new Medical(integer0);
//      TimeZone timeZone0 = TimeZone.getDefault();
//      Locale locale0 = Locale.ROOT;
//      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0, locale0);
//      Lot lot0 = new Lot(medical0, "org.isf.medicalstock.manager.MovStockInsertingManager", mockGregorianCalendar0, mockGregorianCalendar0, bigDecimal0);
//      List<OHExceptionMessage> list0 = movStockInsertingManager0.validateLot(lot0);
//      assertEquals(1, list0.size());
//  }

//  @Test(timeout = 4000)
//  public void test18()  throws Throwable  {
//      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
//      Lot lot0 = new Lot();
//      // Undeclared exception!
//      try { 
//        movStockInsertingManager0.validateLot(lot0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.isf.medicalstock.manager.MovStockInsertingManager", e);
//      }
//  }

//  @Test(timeout = 4000)
//  public void test19()  throws Throwable  {
//      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
//      List<OHExceptionMessage> list0 = movStockInsertingManager0.validateLot((Lot) null);
//      assertTrue(list0.isEmpty());
//  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
      LinkedList<Movement> linkedList0 = new LinkedList<Movement>();
      Movement movement0 = new Movement();
      linkedList0.add(movement0);
      // Undeclared exception!
      try { 
        movStockInsertingManager0.newMultipleChargingMovements(linkedList0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.isf.medicalstock.manager.MovStockInsertingManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
      LinkedList<Movement> linkedList0 = new LinkedList<Movement>();
      Movement movement0 = new Movement();
      linkedList0.add(movement0);
      // Undeclared exception!
      try { 
        movStockInsertingManager0.newMultipleDischargingMovements(linkedList0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.isf.medicalstock.manager.MovStockInsertingManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MovStockInsertingManager movStockInsertingManager0 = new MovStockInsertingManager();
      Medical medical0 = new Medical();
      // Undeclared exception!
      try { 
        movStockInsertingManager0.storeLot("SzK]z1x j", (Lot) null, medical0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.isf.medicalstock.manager.MovStockInsertingManager", e);
      }
  }
}
